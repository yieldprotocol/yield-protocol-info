/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IIlkRegistry, IIlkRegistryInterface } from "../IIlkRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "ilk",
        type: "bytes32",
      },
    ],
    name: "info",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "class",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "dec",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "gem",
        type: "address",
      },
      {
        internalType: "address",
        name: "pip",
        type: "address",
      },
      {
        internalType: "address",
        name: "join",
        type: "address",
      },
      {
        internalType: "address",
        name: "xlip",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IIlkRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): IIlkRegistryInterface {
    return new utils.Interface(_abi) as IIlkRegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IIlkRegistry {
    return new Contract(address, _abi, signerOrProvider) as IIlkRegistry;
  }
}
