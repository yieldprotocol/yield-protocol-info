/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  MakerImportModule,
  MakerImportModuleInterface,
} from "../MakerImportModule";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICauldron",
        name: "cauldron_",
        type: "address",
      },
      {
        internalType: "contract IWETH9",
        name: "weth_",
        type: "address",
      },
      {
        internalType: "contract IMakerJoin",
        name: "makerDaiJoin_",
        type: "address",
      },
      {
        internalType: "contract ICDPMgr",
        name: "cdpMgr_",
        type: "address",
      },
      {
        internalType: "contract IProxyRegistry",
        name: "proxyRegistry_",
        type: "address",
      },
      {
        internalType: "contract IIlkRegistry",
        name: "ilkRegistry_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "FeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ilkAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "daiDebt",
        type: "uint256",
      },
    ],
    name: "ImportedFromMaker",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "integration",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "set",
        type: "bool",
      },
    ],
    name: "IntegrationAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes6",
        name: "assetId",
        type: "bytes6",
      },
      {
        indexed: true,
        internalType: "address",
        name: "join",
        type: "address",
      },
    ],
    name: "JoinAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "module",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "set",
        type: "bool",
      },
    ],
    name: "ModuleAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes6",
        name: "seriesId",
        type: "bytes6",
      },
      {
        indexed: true,
        internalType: "address",
        name: "pool",
        type: "address",
      },
    ],
    name: "PoolAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bool",
        name: "set",
        type: "bool",
      },
    ],
    name: "TokenAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "bytes6",
            name: "seriesId",
            type: "bytes6",
          },
          {
            internalType: "bytes6",
            name: "ilkId",
            type: "bytes6",
          },
        ],
        internalType: "struct DataTypes.Vault",
        name: "vault",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "ilkAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "debtAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxDaiPrice",
        type: "uint128",
      },
    ],
    name: "_importCdpPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "borrowingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cauldron",
    outputs: [
      {
        internalType: "contract ICauldron",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cdpMgr",
    outputs: [
      {
        internalType: "contract ICDPMgr",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dai",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ilkRegistry",
    outputs: [
      {
        internalType: "contract IIlkRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "maxDaiPrice",
        type: "uint128",
      },
    ],
    name: "importCdp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes12",
        name: "vaultId",
        type: "bytes12",
      },
      {
        internalType: "uint256",
        name: "cdp",
        type: "uint256",
      },
      {
        internalType: "uint128",
        name: "ilkAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "debtAmount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "maxDaiPrice",
        type: "uint128",
      },
    ],
    name: "importCdpPosition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "integrations",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "",
        type: "bytes6",
      },
    ],
    name: "joins",
    outputs: [
      {
        internalType: "contract IJoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "makerDaiJoin",
    outputs: [
      {
        internalType: "contract IMakerJoin",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "modules",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes6",
        name: "",
        type: "bytes6",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "contract IPool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyRegistry",
    outputs: [
      {
        internalType: "contract IProxyRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "contract Router",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vat",
    outputs: [
      {
        internalType: "contract IVat",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH9",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class MakerImportModule__factory {
  static readonly abi = _abi;
  static createInterface(): MakerImportModuleInterface {
    return new utils.Interface(_abi) as MakerImportModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MakerImportModule {
    return new Contract(address, _abi, signerOrProvider) as MakerImportModule;
  }
}
