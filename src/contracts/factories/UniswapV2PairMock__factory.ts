/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  UniswapV2PairMock,
  UniswapV2PairMockInterface,
} from "../UniswapV2PairMock";

const _abi = [
  {
    inputs: [],
    name: "blockTimestamp",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserves0",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reserves1",
    outputs: [
      {
        internalType: "uint112",
        name: "",
        type: "uint112",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "cumPrice0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "cumPrice1",
        type: "uint256",
      },
    ],
    name: "setCumulativePrices",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint112",
        name: "reserves0_",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "reserves1_",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "blockTimestamp_",
        type: "uint32",
      },
    ],
    name: "setReserves",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class UniswapV2PairMock__factory {
  static readonly abi = _abi;
  static createInterface(): UniswapV2PairMockInterface {
    return new utils.Interface(_abi) as UniswapV2PairMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2PairMock {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2PairMock;
  }
}
